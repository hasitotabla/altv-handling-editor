{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/fast-xml-parser/src/util.js","../../node_modules/fast-xml-parser/src/validator.js","../../node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js","../../node_modules/fast-xml-parser/src/xmlparser/xmlNode.js","../../node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js","../../node_modules/strnum/strnum.js","../../node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js","../../node_modules/fast-xml-parser/src/xmlparser/node2json.js","../../node_modules/fast-xml-parser/src/xmlparser/XMLParser.js","../../node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js","../../node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js","../../node_modules/fast-xml-parser/src/fxp.js","../../node_modules/svelte/store/index.mjs","../../src/store/Export.ts","../../src/components/Header.svelte","../../src/components/Footer.svelte","../../src/Export.svelte","../../src/HandlingProperties.ts","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n","\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true,\n      eNotation: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n    transformAttributeName: false,\n    updateTag: function(tagName, jPath, attrs){\n      return tagName\n    },\n    // skipEmptyListItem: false\n};\n   \nconst buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;","'use strict';\n\nclass XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    if(key === \"__proto__\") key = \"#__proto__\";\n    this.child.push( {[key]: val });\n  }\n  addChild(node) {\n    if(node.tagname === \"__proto__\") node.tagname = \"#__proto__\";\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n  };\n};\n\n\nmodule.exports = XmlNode;","const util = require('../util');\n\n//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<' && !comment) { //Determine the tag type\n                if( hasBody && isEntity(xmlData, i)){\n                    i += 7; \n                    [entityName, val,i] = readEntityExp(xmlData,i+1);\n                    if(val.indexOf(\"&\") === -1) //Parameter entities are not supported\n                        entities[ validateEntityName(entityName) ] = {\n                            regx : RegExp( `&${entityName};`,\"g\"),\n                            val: val\n                        };\n                }\n                else if( hasBody && isElement(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isAttlist(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isNotation(xmlData, i)) i += 9;//Not supported\n                else if( isComment)                         comment = true;\n                else                                        throw new Error(\"Invalid DOCTYPE\");\n\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') { //Read tag content\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                        angleBracketsCount--;\n                    }\n                }else{\n                    angleBracketsCount--;\n                }\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nfunction readEntityExp(xmlData,i){\n    //External entities are not supported\n    //    <!ENTITY ext SYSTEM \"http://normal-website.com\" >\n\n    //Parameter entities are not supported\n    //    <!ENTITY entityname \"&anotherElement;\">\n\n    //Internal entities are supported\n    //    <!ENTITY entityname \"replacement text\">\n    \n    //read EntityName\n    let entityName = \"\";\n    for (; i < xmlData.length && (xmlData[i] !== \"'\" && xmlData[i] !== '\"' ); i++) {\n        // if(xmlData[i] === \" \") continue;\n        // else \n        entityName += xmlData[i];\n    }\n    entityName = entityName.trim();\n    if(entityName.indexOf(\" \") !== -1) throw new Error(\"External entites are not supported\");\n\n    //read Entity Value\n    const startChar = xmlData[i++];\n    let val = \"\"\n    for (; i < xmlData.length && xmlData[i] !== startChar ; i++) {\n        val += xmlData[i];\n    }\n    return [entityName, val, i];\n}\n\nfunction isComment(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === '-' &&\n    xmlData[i+3] === '-') return true\n    return false\n}\nfunction isEntity(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'N' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'I' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'Y') return true\n    return false\n}\nfunction isElement(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'L' &&\n    xmlData[i+4] === 'E' &&\n    xmlData[i+5] === 'M' &&\n    xmlData[i+6] === 'E' &&\n    xmlData[i+7] === 'N' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\n\nfunction isAttlist(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'A' &&\n    xmlData[i+3] === 'T' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'L' &&\n    xmlData[i+6] === 'I' &&\n    xmlData[i+7] === 'S' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\nfunction isNotation(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'N' &&\n    xmlData[i+3] === 'O' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'A' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'I' &&\n    xmlData[i+8] === 'O' &&\n    xmlData[i+9] === 'N') return true\n    return false\n}\n\nfunction validateEntityName(name){\n    if (util.isName(name))\n\treturn name;\n    else\n        throw new Error(`Invalid entity name ${name}`);\n}\n\nmodule.exports = readDocType;\n","const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)(\\.[0-9]+([eE]\\-?[0-9]+)?|[0-9]+(\\.[0-9]+([eE]\\-?[0-9]+)?)?)$/;\n// const octRegex = /0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n    Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n    Number.parseFloat = window.parseFloat;\n}\n\n  \nconst consider = {\n    hex :  true,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true\n    //skipLike: /regex/\n};\n\nfunction toNumber(str, options = {}){\n    // const options = Object.assign({}, consider);\n    // if(opt.leadingZeros === false){\n    //     options.leadingZeros = false;\n    // }else if(opt.hex === false){\n    //     options.hex = false;\n    // }\n\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    // if(trimmedStr === \"0.0\") return 0;\n    // else if(trimmedStr === \"+0.0\") return 0;\n    // else if(trimmedStr === \"-0.0\") return -0;\n\n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return Number.parseInt(trimmedStr, 16);\n    // } else if (options.parseOct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        if(match){\n            const sign = match[1];\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            //trim ending zeros for floating number\n            \n            const eNotation = match[4] || match[6];\n            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str; //-0123\n            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str; //0123\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const numStr = \"\" + num;\n                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(eNotation){ //given number has enotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    // const decimalPart = match[5].substr(1);\n                    // const intPart = trimmedStr.substr(0,trimmedStr.indexOf(\".\"));\n\n                    \n                    // const p = numStr.indexOf(\".\");\n                    // const givenIntPart = numStr.substr(0,p);\n                    // const givenDecPart = numStr.substr(p+1);\n                    if(numStr === \"0\" && (numTrimmedByZeros === \"\") ) return num; //0.0\n                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( sign && numStr === \"-\"+numTrimmedByZeros) return num;\n                    else return str;\n                }\n                \n                if(leadingZeros){\n                    // if(numTrimmedByZeros === numStr){\n                    //     if(options.leadingZeros) return num;\n                    //     else return str;\n                    // }else return str;\n                    if(numTrimmedByZeros === numStr) return num;\n                    else if(sign+numTrimmedByZeros === numStr) return num;\n                    else return str;\n                }\n\n                if(trimmedStr === numStr) return num;\n                else if(trimmedStr === sign+numStr) return num;\n                // else{\n                //     //number with +/- sign\n                //     trimmedStr.test(/[-+][0-9]);\n\n                // }\n                return str;\n            }\n            // else if(!eNotation && trimmedStr && trimmedStr !== Number(trimmedStr) ) return str;\n            \n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substr(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\nmodule.exports = toNumber\n","'use strict';\n///@ts-check\n\nconst util = require('../util');\nconst xmlNode = require('./xmlNode');\nconst readDocType = require(\"./DocTypeReader\");\nconst toNumber = require(\"strnum\");\n\n// const regx =\n//   '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n//   .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nclass OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n    this.addChild = addChild;\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath, tagName) {\n  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      let oldVal = matches[i][4];\n      let aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n        if(aName === \"__proto__\") aName  = \"#__proto__\";\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        //check if last tag of nested tag was unpaired tag\n        const lastTagName = jPath.substring(jPath.lastIndexOf(\".\")+1);\n        if(tagName && this.options.unpairedTags.indexOf(tagName) !== -1 ){\n          throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);\n        }\n        let propIndex = 0\n        if(lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1 ){\n          propIndex = jPath.lastIndexOf('.', jPath.lastIndexOf('.')-1)\n          this.tagsNodeStack.pop();\n        }else{\n          propIndex = jPath.lastIndexOf(\".\");\n        }\n        jPath = jPath.substring(0, propIndex);\n\n        currentNode = this.tagsNodeStack.pop();//avoid recursion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);\n          }\n          this.addChild(currentNode, childNode, jPath)\n\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true, true);\n        if(val == undefined) val = \"\";\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this.options.removeNSPrefix);\n        let tagName= result.tagName;\n        const rawTagName = result.rawTagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n          jPath = jPath.substring(0, jPath.lastIndexOf(\".\"));\n        }\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) {\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            i = result.closeIndex;\n          }\n          //unpaired tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, rawTagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${rawTagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          this.addChild(currentNode, childNode, jPath)\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nfunction addChild(currentNode, childNode, jPath){\n  const result = this.options.updateTag(childNode.tagname, jPath, childNode[\":@\"])\n  if(result === false){\n  }else if(typeof result === \"string\"){\n    childNode.tagname = result\n    currentNode.addChild(childNode);\n  }else{\n    currentNode.addChild(childNode);\n  }\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-double quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substring(0, separatorIndex);\n    tagExp = tagExp.substring(separatorIndex + 1).trimStart();\n  }\n\n  const rawTagName = tagName;\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n    rawTagName: rawTagName,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n\nmodule.exports = OrderedObjParser;\n","'use strict';\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nfunction prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {\n        if(!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const { textNodeName } = options;\n  const propCount = Object.keys(obj).length;\n  \n  if (propCount === 0) {\n    return true;\n  }\n\n  if (\n    propCount === 1 &&\n    (obj[textNodeName] || typeof obj[textNodeName] === \"boolean\" || obj[textNodeName] === 0)\n  ) {\n    return true;\n  }\n\n  return false;\n}\nexports.prettify = prettify;\n","const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;","const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nfunction toXml(jArray, options) {\n    let indentation = \"\";\n    if (options.format && options.indentBy.length > 0) {\n        indentation = EOL;\n    }\n    return arrToStr(jArray, options, \"\", indentation);\n}\n\nfunction arrToStr(arr, options, jPath, indentation) {\n    let xmlStr = \"\";\n    let isPreviousElementTag = false;\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        if(tagName === undefined) continue;\n\n        let newJPath = \"\";\n        if (jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if (tagName === options.textNodeName) {\n            let tagText = tagObj[tagName];\n            if (!isStopNode(newJPath, options)) {\n                tagText = options.tagValueProcessor(tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += tagText;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.cdataPropName) {\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.commentPropName) {\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            isPreviousElementTag = true;\n            continue;\n        } else if (tagName[0] === \"?\") {\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            isPreviousElementTag = true;\n            continue;\n        }\n        let newIdentation = indentation;\n        if (newIdentation !== \"\") {\n            newIdentation += options.indentBy;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        const tagStart = indentation + `<${tagName}${attStr}`;\n        const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);\n        if (options.unpairedTags.indexOf(tagName) !== -1) {\n            if (options.suppressUnpairedNode) xmlStr += tagStart + \">\";\n            else xmlStr += tagStart + \"/>\";\n        } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {\n            xmlStr += tagStart + \"/>\";\n        } else if (tagValue && tagValue.endsWith(\">\")) {\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;\n        } else {\n            xmlStr += tagStart + \">\";\n            if (tagValue && indentation !== \"\" && (tagValue.includes(\"/>\") || tagValue.includes(\"</\"))) {\n                xmlStr += indentation + options.indentBy + tagValue + indentation;\n            } else {\n                xmlStr += tagValue;\n            }\n            xmlStr += `</${tagName}>`;\n        }\n        isPreviousElementTag = true;\n    }\n\n    return xmlStr;\n}\n\nfunction propName(obj) {\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if(!obj.hasOwnProperty(key)) continue;\n        if (key !== \":@\") return key;\n    }\n}\n\nfunction attr_to_str(attrMap, options) {\n    let attrStr = \"\";\n    if (attrMap && !options.ignoreAttributes) {\n        for (let attr in attrMap) {\n            if(!attrMap.hasOwnProperty(attr)) continue;\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if (attrVal === true && options.suppressBooleanAttributes) {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            } else {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options) {\n    jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for (let index in options.stopNodes) {\n        if (options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\" + tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options) {\n    if (textValue && textValue.length > 0 && options.processEntities) {\n        for (let i = 0; i < options.entities.length; i++) {\n            const entity = options.entities[i];\n            textValue = textValue.replace(entity.regex, entity.val);\n        }\n    }\n    return textValue;\n}\nmodule.exports = toXml;\n","'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  // transformTagName: false,\n  // transformAttributeName: false,\n  oneListGroup: false\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if(!Object.prototype.hasOwnProperty.call(jObj, key)) continue;\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node only if it is not an attribute\n      if (this.isAttribute(key)) {\n        val += '';\n      }\n    } else if (jObj[key] === null) {\n      // null attribute should be ignored by the attribute list, but should not cause the tag closing\n      if (this.isAttribute(key)) {\n        val += '';\n      } else if (key[0] === '?') {\n        val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      } else {\n        val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      }\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextValNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      }else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextValNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      let listTagVal = \"\";\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          if(this.options.oneListGroup ){\n            listTagVal += this.j2x(item, level + 1).val;\n          }else{\n            listTagVal += this.processTextOrObjNode(item, key, level)\n          }\n        } else {\n          listTagVal += this.buildTextValNode(item, key, '', level);\n        }\n      }\n      if(this.options.oneListGroup){\n        listTagVal = this.buildObjectNode(listTagVal, key, '', level);\n      }\n      val += listTagVal;\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nBuilder.prototype.buildAttrPairStr = function(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjectNode(result.val, key, result.attrStr, level);\n  }\n}\n\nBuilder.prototype.buildObjectNode = function(val, key, attrStr, level) {\n  if(val === \"\"){\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }\n  }else{\n\n    let tagEndExp = '</' + key + this.tagEndChar;\n    let piClosingChar = \"\";\n    \n    if(key[0] === \"?\") {\n      piClosingChar = \"?\";\n      tagEndExp = \"\";\n    }\n  \n    // attrStr is an empty string in case the attribute came as undefined or null\n    if ((attrStr || attrStr === '') && val.indexOf('<') === -1) {\n      return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n    } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n      return this.indentate(level) + `<!--${val}-->` + this.newLine;\n    }else {\n      return (\n        this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n        val +\n        this.indentate(level) + tagEndExp    );\n    }\n  }\n}\n\nBuilder.prototype.closeTag = function(key){\n  let closeTag = \"\";\n  if(this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(!this.options.suppressUnpairedNode) closeTag = \"/\"\n  }else if(this.options.suppressEmptyNode){ //empty\n    closeTag = \"/\";\n  }else{\n    closeTag = `></${key}`\n  }\n  return closeTag;\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n      // return this.buildTagStr(level,key, attrStr);\n    }\n  }\n}\n\nBuilder.prototype.buildTextValNode = function(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else if(key[0] === \"?\") {//PI tag\n    return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; \n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === ''){\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar;\n    }\n  }\n}\n\nBuilder.prototype.replaceEntitiesValue = function(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix) && name !== this.options.textNodeName) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n","'use strict';\n\nconst validator = require('./validator');\nconst XMLParser = require('./xmlparser/XMLParser');\nconst XMLBuilder = require('./xmlbuilder/json2xml');\n\nmodule.exports = {\n  XMLParser: XMLParser,\n  XMLValidator: validator,\n  XMLBuilder: XMLBuilder\n}","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier} [start]\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=} start\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0 && stop) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let started = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (started) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        started = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n            // We need to set this to false because callbacks can still happen despite having unsubscribed:\n            // Callbacks might already be placed in the queue which doesn't know it should no longer\n            // invoke this derived store.\n            started = false;\n        };\n    });\n}\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @param store - store to make readonly\n */\nfunction readonly(store) {\n    return {\n        subscribe: store.subscribe.bind(store)\n    };\n}\n\nexport { derived, readable, readonly, writable };\n","import { writable } from \"svelte/store\";\r\nexport const exportStore = writable(\"\");\r\n","<script lang=\"ts\">\r\n  export let text = \"Header\";\r\n</script>\r\n\r\n<h1 class=\"header\">{text}</h1>\r\n\r\n<style lang=\"scss\">\r\n  $window-radius: 8pt;\r\n\r\n  h1.header {\r\n    padding: 8pt 8pt;\r\n    transform: translateY(1px);\r\n\r\n    font-size: 18px;\r\n    font-weight: 400;\r\n\r\n    text-align: center;\r\n\r\n    border-radius: $window-radius $window-radius 0pt 0pt;\r\n\r\n    background: rgb(14, 14, 14);\r\n    color: rgb(200, 200, 200);\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  export let tooltipText: string | undefined = \"\";\r\n  export let buttons: Array<{\r\n    text: string;\r\n    onClick: () => void;\r\n    status?: string;\r\n  }> = [];\r\n</script>\r\n\r\n<div class=\"footer\">\r\n  <p class=\"author\">\r\n    Made by\r\n    <span\r\n      class=\"author-name\"\r\n      on:click={() => window.open(\"https://github.com/szkiddaj\")}\r\n      >@szkiddaj</span\r\n    > with ✨ and 👺\r\n  </p>\r\n\r\n  <div class=\"controls\">\r\n    {#each buttons as { text, onClick, status }, i}\r\n      <button on:click={onClick} data-status={status}>{text}</button>\r\n    {/each}\r\n    <!-- <button on:click={resetToDefault}>Reset</button>\r\n    <button on:click={() => toggleExportWindow(true)}>Export</button>\r\n    <button on:click={saveHandling}>Save</button> -->\r\n  </div>\r\n\r\n  {#if typeof tooltipText === \"string\" && tooltipText !== \"\"}\r\n    <div class=\"tooltip-text\">{@html tooltipText}</div>\r\n  {/if}\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n  $window-radius: 8pt;\r\n  $input-width: 200px;\r\n  $total-width: 300px + $input-width;\r\n\r\n  $from-color: #81f6aa;\r\n  $to-color: #6dc2fb;\r\n\r\n  .footer {\r\n    transform: translateY(-1px);\r\n\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    box-sizing: border-box;\r\n    padding: 8pt;\r\n\r\n    border-radius: 0pt 0pt $window-radius $window-radius;\r\n\r\n    background: rgb(14, 14, 14);\r\n    color: rgb(200, 200, 200);\r\n\r\n    .author {\r\n      font-size: 11px;\r\n      font-weight: 400;\r\n\r\n      opacity: 0.65;\r\n      color: rgb(200, 200, 200);\r\n\r\n      .author-name {\r\n        font-weight: 600;\r\n\r\n        background: linear-gradient(to right, $from-color, $to-color);\r\n        background-clip: text;\r\n        -webkit-background-clip: text;\r\n\r\n        color: transparent;\r\n        animation: gradientText 3s linear infinite;\r\n\r\n        &:hover {\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n\r\n    .controls {\r\n      button {\r\n        bottom: 0;\r\n        right: 0;\r\n\r\n        padding: 6pt 12pt;\r\n\r\n        border-radius: 6pt;\r\n        border: 2px solid rgb(32, 32, 32);\r\n\r\n        font-family: \"Inter\", sans-serif;\r\n        font-size: 12px;\r\n        font-weight: bold;\r\n\r\n        color: rgb(200, 200, 200);\r\n        background: rgb(24, 24, 24);\r\n        transition:\r\n          100ms border ease-in-out,\r\n          100ms background ease-in-out,\r\n          100ms color ease-in-out;\r\n\r\n        &[data-status=\"true\"] {\r\n          cursor: pointer;\r\n          border: 2px solid rgb(64, 64, 64);\r\n          color: rgb(32, 32, 32);\r\n          background: rgb(69, 255, 122);\r\n        }\r\n\r\n        &:hover:not([data-status=\"true\"]) {\r\n          cursor: pointer;\r\n          border: 2px solid rgb(64, 64, 64);\r\n          color: rgb(220, 220, 220);\r\n          background: rgb(48, 48, 48);\r\n        }\r\n\r\n        &:not(:last-child) {\r\n          margin-right: 4pt;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .tooltip-text {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 50%;\r\n    transform: translate(-50%, calc(100% + 10px));\r\n\r\n    width: calc(#{$total-width} - 16pt);\r\n    padding: 4pt 8pt;\r\n\r\n    border-radius: 6pt;\r\n    border: 2px solid rgb(32, 32, 32);\r\n\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n\r\n    color: rgb(200, 200, 200);\r\n    background: rgb(14, 14, 14);\r\n    transition:\r\n      100ms border ease-in-out,\r\n      100ms background ease-in-out,\r\n      100ms color ease-in-out;\r\n\r\n    cursor: help;\r\n\r\n    &:hover {\r\n      border: 2px solid rgb(64, 64, 64);\r\n      color: rgb(220, 220, 220);\r\n      background: rgb(24, 24, 24);\r\n    }\r\n  }\r\n</style>\r\n","<!-- svelte-ignore a11y-click-events-have-key-events -->\r\n<script lang=\"ts\">\r\n  import { XMLBuilder, XMLParser } from \"fast-xml-parser\";\r\n  import { exportStore } from \"./store/Export\";\r\n  import type {\r\n    HandlingValueTypes,\r\n    InternalHandlingValue,\r\n    Vector3,\r\n  } from \"./types/Handling\";\r\n  import Header from \"./components/Header.svelte\";\r\n  import Footer from \"./components/Footer.svelte\";\r\n\r\n  let inputValue: string = \"\";\r\n  exportStore.subscribe((value) => (inputValue = value));\r\n\r\n  let didExportRecently = false;\r\n\r\n  export let toggleExportWindow: (newState: boolean) => void;\r\n  export let updatedProperties: { [key: string]: boolean } = {};\r\n  export let handlingProperties: {\r\n    [key: string]: InternalHandlingValue;\r\n  } = {};\r\n\r\n  const xmlParser = new XMLParser({\r\n    ignoreAttributes: false,\r\n  });\r\n\r\n  const xmlBuilder = new XMLBuilder({\r\n    ignoreAttributes: false,\r\n    suppressEmptyNode: true,\r\n    format: true,\r\n  });\r\n\r\n  const lowercaseFirstCharacter = (str: string) =>\r\n    str.charAt(0).toLowerCase() + str.slice(1);\r\n\r\n  const formatFloat = (num: number) => num.toFixed(6).toString();\r\n\r\n  const castValue = (\r\n    prefix: HandlingValueTypes,\r\n    { value }: InternalHandlingValue\r\n  ) => {\r\n    if (prefix === \"f\") return { \"@_value\": formatFloat(value as number) };\r\n\r\n    if (prefix === \"vec\")\r\n      return {\r\n        \"@_x\": formatFloat((value as Vector3).x),\r\n        \"@_y\": formatFloat((value as Vector3).y),\r\n        \"@_z\": formatFloat((value as Vector3).z),\r\n      };\r\n\r\n    return value;\r\n  };\r\n\r\n  const replaceModifiedValues = () => {\r\n    const parsed = xmlParser.parse(inputValue);\r\n\r\n    const list = parsed?.Item;\r\n    if (!list) return;\r\n\r\n    for (const [key] of Object.entries(list)) {\r\n      const convertedKey = lowercaseFirstCharacter(\r\n        key.replace(/^(f|vec)(.*)/, \"$2\")\r\n      );\r\n\r\n      if (\r\n        !convertedKey ||\r\n        !handlingProperties[convertedKey] ||\r\n        !updatedProperties[convertedKey]\r\n      )\r\n        continue;\r\n\r\n      const handlingType = key.match(/^(f|vec)/)?.[1] as HandlingValueTypes;\r\n      const newCastedValue = castValue(\r\n        handlingType,\r\n        handlingProperties[convertedKey]\r\n      );\r\n\r\n      list[key] = newCastedValue;\r\n    }\r\n\r\n    const output = xmlBuilder.build(parsed);\r\n\r\n    return output;\r\n  };\r\n\r\n  const exportToClipboard = () => {\r\n    if (didExportRecently) return;\r\n\r\n    const preparedData = replaceModifiedValues();\r\n    if (!preparedData) return;\r\n\r\n    alt.emit(\"handling:copyText\", preparedData);\r\n\r\n    didExportRecently = true;\r\n    setTimeout(() => (didExportRecently = false), 3000);\r\n  };\r\n</script>\r\n\r\n<div class=\"container\">\r\n  <Header text=\"Export\" />\r\n\r\n  <div class=\"body\">\r\n    <p class=\"disclaimer\">\r\n      Paste the vehicle's current handling data that is in the handling.meta\r\n      file.\r\n    </p>\r\n\r\n    <textarea class=\"base-input\" bind:value={$exportStore} />\r\n  </div>\r\n\r\n  <Footer\r\n    buttons={[\r\n      {\r\n        text: \"Close\",\r\n        onClick: () => toggleExportWindow(false),\r\n      },\r\n      {\r\n        text: didExportRecently ? \"Copied to clipboard\" : \"Export to clipboard\",\r\n        onClick: exportToClipboard,\r\n        status: didExportRecently ? \"true\" : \"\",\r\n      },\r\n    ]}\r\n  />\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n  $scrollbar-width: 8px;\r\n  $scrollbar-color: #333;\r\n  $track-color: #222;\r\n  $hover-color: #555;\r\n  $window-radius: 8pt;\r\n\r\n  $total-width: 550px;\r\n\r\n  $from-color: #81f6aa;\r\n  $to-color: #6dc2fb;\r\n\r\n  .container {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n\r\n    width: $total-width;\r\n\r\n    .body {\r\n      height: fit-content;\r\n\r\n      padding: 12pt 8pt;\r\n      box-sizing: border-box;\r\n\r\n      background: rgb(24, 24, 24);\r\n      color: rgb(200, 200, 200);\r\n\r\n      overflow-y: auto;\r\n\r\n      scroll-behavior: smooth;\r\n      scrollbar-width: thin;\r\n      scrollbar-color: $scrollbar-color $track-color;\r\n\r\n      &::-webkit-scrollbar {\r\n        width: $scrollbar-width;\r\n      }\r\n\r\n      &::-webkit-scrollbar-thumb {\r\n        background-color: $scrollbar-color;\r\n        border: 2px solid $track-color;\r\n        &:hover {\r\n          background-color: $hover-color;\r\n        }\r\n      }\r\n\r\n      &::-webkit-scrollbar-track {\r\n        background-color: $track-color;\r\n      }\r\n\r\n      p.disclaimer {\r\n        font-family: \"Inter\", sans-serif;\r\n        font-size: 12px;\r\n        font-weight: 400;\r\n\r\n        margin-bottom: 8pt;\r\n\r\n        opacity: 0.65;\r\n        color: rgb(200, 200, 200);\r\n      }\r\n\r\n      textarea {\r\n        width: calc(100% - 8pt);\r\n        height: 450px;\r\n\r\n        padding: 4pt;\r\n        margin: 0;\r\n\r\n        box-sizing: content-box;\r\n\r\n        border: none;\r\n        border-radius: 4pt;\r\n\r\n        font-family: \"Inter\", sans-serif;\r\n        font-size: 14px;\r\n        font-weight: 400;\r\n\r\n        background: rgb(32, 32, 32);\r\n        color: rgb(200, 200, 200);\r\n\r\n        resize: none;\r\n        overflow-y: visible;\r\n\r\n        &::-webkit-scrollbar {\r\n          display: none;\r\n        }\r\n\r\n        &:focus,\r\n        &:active {\r\n          outline: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n</style>\r\n","export const HANDLING_PROPERTY_DESCRIPTIONS = {\r\n    acceleration: ``,\r\n    antiRollBarBiasFront: `The bias between front and rear for the antiroll bar. (0 front, 1 rear)`,\r\n    antiRollBarBiasRear: ``,\r\n    antiRollBarForce: `The spring constant that is transmitted to the opposite wheel when under compression larger numbers are a larger force.</br>Larger Numbers = less body roll`,\r\n    brakeBiasFront: `This line controls the distribution of braking force between the front and rear axles.</br></br>\r\n  Values: (Similar to fDriveBiasFront)</br></br>\r\n  - <b>0.0 means the rear axle only receives brake force.</b></br>\r\n  - <b>1.0 means the front axle only receives brake force.</b></br>\r\n  - <b>0.5 gives both axles equal brake force.</b></br>\r\n  - <b>Values between 0.01 and 0.49 means the rear axle will receive more brake force.</b></br>\r\n  - <b>Values between 0.51 and 0.99 means the front axles will receive more brake force than the rear.</b>`,\r\n    brakeBiasRear: ``,\r\n    brakeForce: `Obvious one. Multiplies the game's calculation of deceleration.</br></br>\r\n  - <b>Bigger numbers = harder braking.</b></br></br>\r\n  Values: 0.01 - 2.0 and above.</br></br>\r\n  - <b>1.0 uses brake force calculation unmodified.</b>`,\r\n    camberStiffnesss: `How much the vehicle is pushed towards its roll direction. Road camber also affects roll and applied forces.</br>Values smaller than 0.0 or greater than 1.0 create unrealistic forces.`,\r\n    centreOfMassOffset: `Shifts the center of gravity in meters from side to side.<br/><br/>\r\n  Values: (0 means that the center of gravity will be in the center of the vehicle.)<br/><br/>\r\n  - <b>X: -10.0 to 10.0. Positive values move the center of gravity right.</b><br/>\r\n  - <b>Y: -10.0 to 10.0. Positive values move the center of gravity forwards.</b><br/>\r\n  - <b>Z: -10.0 to 10.0. Positive values move the center of gravity upwards.</b>`,\r\n    clutchChangeRateScaleDownShift: `Clutch speed multiplier on down shifts. (Bigger numbers = faster shifts)`,\r\n    clutchChangeRateScaleUpShift: `Clutch speed multiplier on up shifts. (Bigger numbers = faster shifts)`,\r\n    collisionDamageMult: `Multiplies the game's calculation of damage to the vehicle by collision.`,\r\n    damageFlags: ``,\r\n    deformationDamageMult: `Multiplies the game's calculation of deformation damage.`,\r\n    downforceModifier: ``,\r\n    driveBiasFront: `This is used to determine whether a vehicle is front, rear, or four wheel drive. (0.0 = rear wheel drive, 0.5 = 4 wheel drive, 1.0 = front wheel drive. Any value between 0.01 and 0.99 is four wheel drive.)`,\r\n    driveInertia: `Describes how fast an engine will rev. Values: 0.01 - 2.0.`,\r\n    driveMaxFlatVel: `This determines the vehicle speed at redline in the top gear (not the show).`,\r\n    engineDamageMult: `Multiplies the game's calculation of damage to the engine, causing explosion or engine failure. (Values for the above four: 0.0 - 10.0.)`,\r\n    handBrakeForce: `Another obvious one. Braking power of the handbrake. Bigger numbers = harder braking. (Values: 0.0<)`,\r\n    handlingFlags: ``,\r\n    inertiaMultiplier: ``,\r\n    initialDragCoeff: `Sets the drag coefficient of the vehicle. Increase to simulate aerodynamic drag. (Value: 10-120)`,\r\n    initialDriveForce: `This modifies the game's calculation of drive force (from the output of the transmission). (Values: 0.01 - 2.0 and above.)`,\r\n    initialDriveGears: `Obviously, this line determines how many forward speeds/gears a vehicle's transmission contains. (Values: 1 or more.)`,\r\n    initialDriveMaxFlatVel: `This determines the vehicle speed at redline in the top gear (not the show).`,\r\n    lowSpeedTractionLossMult: `How much traction is reduced at low speed.</br></br>\r\n  <b>- 0.0 means normal traction. It affects mainly car burnout when pressing gas (W/UP).</b></br></br>\r\n  <b>- Decreasing value will cause less burnout, less sliding at start.</b></br></br>\r\n  <b>- Higher value will cause more burnout.</b>`,\r\n    mass: `This is the weight of the vehicle in kilograms. Only used when the vehicle collides with another vehicle or non-static object.`,\r\n    modelFlags: ``,\r\n    monetaryValue: ``,\r\n    oilVolume: `Amount of oil.`,\r\n    percentSubmerged: `The percentage of the vehicle's \"floating height\" after it falls into the water, before sinking.</br></br>\r\n  - <b>Default - 85% for vanilla, land vehicles. The value will stop sinking the vehicle to float for a moment before sinking. Boats excluded.</b></br></br>\r\n  - <b>Value: Any percentage. Should be given in decimal. Example: 0.70 (70%)</b></br></br>\r\n  - <b>An invalid number will cause the vehicle to sink without the driver drowning.</b>`,\r\n    percentSubmergedRatio: ``,\r\n    petrolTankVolume: `Amount of petrol that will leak after damaging a vehicle's tank.`,\r\n    rollCentreHeightFront: `Larger Numbers = less rollovers.`,\r\n    rollCentreHeightRear: `This value modify the weight transmission during an acceleration between the front and rear. high positive value can make your car able to do wheelies. <b>Larger Numbers = less rollovers</b>`,\r\n    seatOffsetDistX: `Value: Driver > passenger`,\r\n    seatOffsetDistY: `Value: Trunk > hood`,\r\n    seatOffsetDistZ: `Value: Undercarriage > roof`,\r\n    steeringLock: `This multiplies the game's calculation of the <b>angle of the steer wheel</b> will turn while at full turn. Steering lock is directly related to over/under-steer.<br/><br/>\r\n  - <b>Values between 0.1 - 0.2 will simulate a long wheelbase.</b><br/><br/>\r\n  - <b>Values around 0.75 and above will turn extremely fast. Higher values will cause the vehicle to spin out easily.</b>`,\r\n    steeringLockRatio: ``,\r\n    suspensionBiasFront: `This value determines which suspension is stronger, front or rear.<br/><br/>\r\n  - <b>If value is above 0.50 then front is stiffer, when below, rear is stiffer.</b><br/><br/>`,\r\n    suspensionBiasRear: ``,\r\n    suspensionCompDamp: `Damping during strut compression. (Bigger values = stiffer)`,\r\n    suspensionForce: `Affects how strong suspension is.</br></br>\r\n  <b>1/(Force x Wheels) = Lower limit for zero force at full extension.</b>`,\r\n    suspensionLowerLimit: `Visual limit of how far can wheels move up / down from original position.`,\r\n    suspensionRaise: `The amount that the suspension raises the body off the wheels.`,\r\n    suspensionReboundDamp: `Damping during strut rebound.</br></br>\r\n  <b>Bigger values = stiffer.</b>`,\r\n    suspensionUpperLimit: ``,\r\n    tractionBiasFront: `Determines the distribution of traction from front to rear.</br></br>\r\n  Values: 0.01 - 0.99.</br></br>\r\n  - <b>0.01 = only rear axle has traction.</b><br/><br>\r\n  - <b>0.99 = only front axle has traction.</b><br/><br>\r\n  - <b>0.5 = both axles have equal traction.</b><br/><br>\r\n  - <b>Entering a value of 0.0 or 1.0 causes the vehicle to have no traction.</b>`,\r\n    tractionBiasRear: ``,\r\n    tractionCurveLateral: `Shape of lateral traction curve.`,\r\n    tractionCurveLateralRatio: ``,\r\n    tractionCurveMax: `Cornering grip of the vehicle as a multiplier of the tire surface friction.`,\r\n    tractionCurveMaxRatio: ``,\r\n    tractionCurveMin: `Accelerating/braking grip of the vehicle as a multiplier of the tire surface friction.`,\r\n    tractionCurveMinRatio: ``,\r\n    tractionLossMult: `Affects how much grip is changed when driving on asphalt and mud.</br></br>\r\n  <b>Higher values make the car less responsive and prone to sliding.</b>`,\r\n    tractionSpringDeltaMax: `This value determines at what distance <b>above the ground</b> the car will <b>lose traction</b>.`,\r\n    tractionSpringDeltaMaxRatio: ``,\r\n    weaponDamageMult: `Multiplies the game's calculation of damage to the vehicle by weapons.`,\r\n};\r\n","<!-- svelte-ignore a11y-click-events-have-key-events -->\n<script lang=\"ts\">\n  import ExportWindow from \"./Export.svelte\";\n  import { HANDLING_PROPERTY_DESCRIPTIONS } from \"./HandlingProperties\";\n  import type { InternalHandlingValue } from \"./types/Handling\";\n  import Footer from \"./components/Footer.svelte\";\n  import Header from \"./components/Header.svelte\";\n\n  let visible = true;\n  let isExportWindowOpen = false;\n  let updatedProperties: { [key: string]: boolean } = {};\n  let handlingProperties: {\n    [key: string]: InternalHandlingValue;\n  } = {};\n\n  let tooltipText = \"\";\n\n  const saveHandling = () => {\n    if (!(\"alt\" in window)) return;\n\n    let updateData = Array.from(Object.keys(updatedProperties)).reduce(\n      (prev, curr) => ({\n        ...prev,\n        [curr]: handlingProperties[curr].value,\n      }),\n      {}\n    );\n    alt.emit(\"handling:update\", updateData);\n  };\n\n  // TODO: implement a way to copy the handling to be actually useful\n  // for ex. generate the handling.meta or some custom loading thing\n  const toggleExportWindow = (newState: boolean) => {\n    isExportWindowOpen = newState;\n  };\n\n  const resetToDefault = () => {\n    if (!(\"alt\" in window)) return;\n\n    Object.keys(handlingProperties).forEach((key) => {\n      handlingProperties[key].value = handlingProperties[key].modelDefault;\n    });\n\n    updatedProperties = {};\n    alt.emit(\"handling:reset\");\n  };\n\n  const setTooltipText = (key: string) => {\n    if (key && key in HANDLING_PROPERTY_DESCRIPTIONS)\n      tooltipText = HANDLING_PROPERTY_DESCRIPTIONS[key];\n    else tooltipText = \"\";\n  };\n\n  const fieldUpdate = (key: string) => {\n    updatedProperties[key] = true;\n  };\n\n  if (\"alt\" in window) {\n    alt.on(\"handling:open\", (data) => {\n      handlingProperties = data;\n    });\n\n    alt.on(\"handling:setVisibility\", (state) => {\n      visible = state;\n    });\n  }\n</script>\n\n{#if visible && !isExportWindowOpen}\n  <div class={`container`}>\n    <Header text=\"Handling Editor\" />\n\n    <div class=\"items\">\n      {#each Object.entries(handlingProperties) as [key, value]}\n        <div class=\"item\">\n          <!-- svelte-ignore a11y-mouse-events-have-key-events -->\n          <p\n            class=\"item-name\"\n            on:mouseover={() => setTooltipText(key)}\n            on:mouseleave={() => setTooltipText(null)}\n          >\n            {key}\n          </p>\n\n          <div class=\"input-fields\">\n            {#if typeof value.modelDefault === \"object\"}\n              {#each Object.entries(value.value) as [subKey, subValue]}\n                <div class=\"field-group\">\n                  <label for={subKey}>{subKey}</label>\n                  <input\n                    type=\"text\"\n                    value={subValue}\n                    on:input={(ev) => {\n                      fieldUpdate(key);\n                      handlingProperties[key].value[subKey] = parseFloat(\n                        // @ts-ignore\n                        ev.target.value\n                      );\n                    }}\n                  />\n                </div>\n              {/each}\n            {:else}\n              <input\n                type=\"text\"\n                on:change={() => fieldUpdate(key)}\n                bind:value={handlingProperties[key].value}\n              />\n            {/if}\n          </div>\n        </div>\n      {/each}\n    </div>\n\n    <Footer\n      {tooltipText}\n      buttons={[\n        { text: \"Reset\", onClick: resetToDefault },\n        { text: \"Export\", onClick: () => toggleExportWindow(true) },\n        { text: \"Save\", onClick: saveHandling },\n      ]}\n    />\n  </div>\n{/if}\n\n{#if visible && isExportWindowOpen}\n  <ExportWindow {updatedProperties} {handlingProperties} {toggleExportWindow} />\n{/if}\n\n<style lang=\"scss\">\n  $scrollbar-width: 8px;\n  $scrollbar-color: #333;\n  $track-color: #222;\n  $hover-color: #555;\n\n  $input-width: 200px;\n  $total-width: 300px + $input-width;\n\n  @keyframes gradientText {\n    0% {\n      background-position: 0% 50%;\n    }\n\n    100% {\n      background-position: 100% 50%;\n    }\n  }\n\n  .hide {\n    display: none;\n  }\n\n  .container {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: $total-width;\n\n    .items {\n      height: 450px;\n\n      padding: 12pt 8pt;\n      box-sizing: border-box;\n\n      background: rgb(24, 24, 24);\n      color: rgb(200, 200, 200);\n\n      overflow-y: auto;\n\n      scroll-behavior: smooth;\n      scrollbar-width: thin;\n      scrollbar-color: $scrollbar-color $track-color;\n\n      &::-webkit-scrollbar {\n        width: $scrollbar-width;\n      }\n\n      &::-webkit-scrollbar-thumb {\n        background-color: $scrollbar-color;\n        border: 2px solid $track-color;\n        &:hover {\n          background-color: $hover-color;\n        }\n      }\n\n      &::-webkit-scrollbar-track {\n        background-color: $track-color;\n      }\n\n      .item {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n\n        .item-name {\n          position: relative;\n          display: inline-block;\n\n          font-size: 14px;\n          font-weight: 400;\n        }\n\n        .input-fields {\n          width: min-content;\n\n          .field-group {\n            display: flex;\n            align-items: center;\n            justify-content: end;\n\n            label {\n              margin-right: 4pt;\n            }\n          }\n\n          input {\n            width: $input-width;\n            padding: 6pt 8pt;\n\n            border-radius: 6pt;\n            border: 2px solid rgb(32, 32, 32);\n\n            font-size: 12px;\n            font-weight: 400;\n\n            color: rgb(200, 200, 200);\n            background: rgb(14, 14, 14);\n            transition:\n              100ms border ease-in-out,\n              100ms background ease-in-out,\n              100ms color ease-in-out;\n\n            &:active,\n            &:focus {\n              outline: none;\n            }\n\n            &:hover {\n              cursor: text;\n\n              border: 2px solid rgb(64, 64, 64);\n              color: rgb(220, 220, 220);\n              background: rgb(24, 24, 24);\n            }\n\n            &:not(:last-child) {\n              margin-bottom: 4pt;\n            }\n          }\n        }\n\n        &:not(:last-child) {\n          margin-bottom: 8pt;\n          border-bottom: 1px solid rgb(32, 32, 32);\n          padding-bottom: 8pt;\n        }\n      }\n    }\n  }\n</style>\n","import App from \"./App.svelte\";\r\nif (!(\"alt\" in globalThis)) {\r\n    // @ts-ignore shut\r\n    globalThis.alt = {\r\n        emit: (eventName, ...args) => {\r\n            console.log(`Event: ${eventName}`, args);\r\n        },\r\n        on: (eventName, listener) => {\r\n            console.log(`Registered event: ${eventName}`);\r\n        },\r\n    };\r\n}\r\nconst app = new App({\r\n    target: document.body,\r\n});\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","e","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","m","new_on_destroy","on_mount","map","filter","destroy_component","filtered","targets","indexOf","flush_render_callbacks","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","splice","$set","$$props","obj","$$set","keys","nameStartChar","nameRegexp","regexName","RegExp","exports","isExist","v","isEmptyObject","merge","arrayMode","len","getValue","isName","string","match","exec","getAllMatches","regex","matches","allmatches","startIndex","lastIndex","util","require$$0","defaultOptions","allowBooleanAttributes","unpairedTags","isWhiteSpace","char","readPI","xmlData","start","tagname","substr","getErrorObject","getLineNumberForPosition","readCommentAndCDATA","angleBracketsCount","validator","validate","assign","tags","tagFound","reachedRoot","err","tagStartPos","closingTag","tagName","trim","substring","msg","result","readAttributeStr","attrStr","attrStrStart","isValid","validateAttributeString","code","line","tagClosed","otg","openPos","col","afterAmp","validateAmpersand","JSON","stringify","t","replace","doubleQuote","singleQuote","startChar","validAttrStrRegxp","attrNames","getPositionFromMatch","undefined","attrName","validateAttrName","hasOwnProperty","re","validateNumberAmpersand","count","message","lineNumber","lines","split","preserveOrder","attributeNamePrefix","attributesGroupName","textNodeName","ignoreAttributes","removeNSPrefix","parseTagValue","parseAttributeValue","trimValues","cdataPropName","numberParseOptions","hex","leadingZeros","eNotation","tagValueProcessor","val","attributeValueProcessor","stopNodes","alwaysCreateTextNode","isArray","commentPropName","processEntities","htmlEntities","ignoreDeclaration","ignorePiTags","transformTagName","transformAttributeName","updateTag","jPath","attrs","OptionsBuilder","buildOptions","xmlNode","constructor","child","key","addChild","readEntityExp","entityName","Error","isComment","isEntity","isElement","isAttlist","isNotation","validateEntityName","DocTypeReader","entities","hasBody","comment","exp","regx","hexRegex","numRegex","Number","parseInt","window","parseFloat","consider","decimalPoint","require$$1","readDocType","require$$2","toNumber","str","trimmedStr","skipLike","test","sign","numTrimmedByZeros","numStr","trimZeros","num","search","addExternalEntities","externalEntities","entKeys","ent","lastEntities","parseTextData","dontTrim","hasAttributes","isLeafNode","escapeEntities","replaceEntitiesValue","newval","parseValue","resolveNameSpace","prefix","charAt","attrsRegx","buildAttributesMap","oldVal","aName","newVal","attrCollection","parseXml","xmlObj","currentNode","textData","closeIndex","findClosingIndex","colonIndex","saveTextToParentTag","lastTagName","lastIndexOf","propIndex","tagsNodeStack","tagData","readTagExp","childNode","tagExp","attrExpPresent","endIndex","docTypeEntities","rawTagName","lastTag","isItStopNode","tagContent","readStopNodeData","entity","ampEntity","currentTagName","allNodesExp","stopNodePath","stopNodeExp","errMsg","closingIndex","closingChar","attrBoundary","ch","tagExpWithClosingIndex","separatorIndex","trimStart","openTagCount","shouldParse","OrderedObjParser_1","apos","gt","lt","quot","cent","pound","yen","euro","copyright","reg","inr","compress","arr","compressedObj","tagObj","property","propName","newJpath","isLeaf","isLeafTag","assignAttributes","attrMap","jpath","atrrName","propCount","node2json","prettify","OrderedObjParser","require$$3","XMLParser_1","parse","validationOption","toString","orderedObjParser","orderedResult","addEntity","arrToStr","indentation","xmlStr","isPreviousElementTag","newJPath","tagText","isStopNode","attStr","attr_to_str","tempInd","piTextNodeName","newIdentation","indentBy","tagStart","tagValue","suppressUnpairedNode","suppressEmptyNode","endsWith","includes","attrVal","suppressBooleanAttributes","textValue","buildFromOrderedJs","jArray","format","oneListGroup","Builder","isAttribute","attrPrefixLen","processTextOrObjNode","indentate","tagEndChar","newLine","object","level","j2x","buildTextValNode","buildObjectNode","repeat","startsWith","prototype","build","jObj","arrayNodeName","call","Date","buildAttrPairStr","arrLen","listTagVal","j","item","Ks","L","closeTag","tagEndExp","piClosingChar","fxp","XMLParser","XMLValidator","XMLBuilder","subscriber_queue","exportStore","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","size","writable","h1","button","apply","arguments","t_value","div","if_block","create_if_block","div1","span","div0","tooltipText","buttons","open","onClick","status","textarea","inputValue","didExportRecently","toggleExportWindow","updatedProperties","handlingProperties","xmlParser","xmlBuilder","formatFloat","toFixed","castValue","x","y","z","preparedData","parsed","list","Item","entries","convertedKey","toLowerCase","slice","handlingType","_a","newCastedValue","replaceModifiedValues","alt","emit","$$invalidate","setTimeout","$exportStore","HANDLING_PROPERTY_DESCRIPTIONS","acceleration","antiRollBarBiasFront","antiRollBarBiasRear","antiRollBarForce","brakeBiasFront","brakeBiasRear","brakeForce","camberStiffnesss","centreOfMassOffset","clutchChangeRateScaleDownShift","clutchChangeRateScaleUpShift","collisionDamageMult","damageFlags","deformationDamageMult","downforceModifier","driveBiasFront","driveInertia","driveMaxFlatVel","engineDamageMult","handBrakeForce","handlingFlags","inertiaMultiplier","initialDragCoeff","initialDriveForce","initialDriveGears","initialDriveMaxFlatVel","lowSpeedTractionLossMult","mass","modelFlags","monetaryValue","oilVolume","percentSubmerged","percentSubmergedRatio","petrolTankVolume","rollCentreHeightFront","rollCentreHeightRear","seatOffsetDistX","seatOffsetDistY","seatOffsetDistZ","steeringLock","steeringLockRatio","suspensionBiasFront","suspensionBiasRear","suspensionCompDamp","suspensionForce","suspensionLowerLimit","suspensionRaise","suspensionReboundDamp","suspensionUpperLimit","tractionBiasFront","tractionBiasRear","tractionCurveLateral","tractionCurveLateralRatio","tractionCurveMax","tractionCurveMaxRatio","tractionCurveMin","tractionCurveMinRatio","tractionLossMult","tractionSpringDeltaMax","tractionSpringDeltaMaxRatio","weaponDamageMult","each_value_1","label","t0","t0_value","input_value_value","modelDefault","create_if_block_2","if_block0","create_if_block_1","if_block1","visible","isExportWindowOpen","newState","setTooltipText","fieldUpdate","on","state","updateData","reduce","prev","curr","ev","subKey","globalThis","eventName","args","console","log","listener","body"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}